\documentclass[11pt,CJK]{cctart}
\usepackage{caption}%调用标题宏包来修改标题的格式，居中对齐ll
\usepackage[paperwidth=8.8in,paperheight=11in,left=1in, right=1in, top=1in, bottom=1in]{geometry}% 版面设计
\usepackage{cite}
\usepackage{latexsym}
\usepackage[dvips]{graphicx}
\usepackage[cmex10,tbtags]{amsmath}
\usepackage{amssymb}
\usepackage{amsthm,multicol,amscd}
\usepackage{amsfonts}
\usepackage{mathbbold}
\usepackage{algorithmic}
\usepackage{algorithm}
\usepackage{array}
\usepackage{subfigure}
\usepackage{wrapfig}
\usepackage{xcolor}
\usepackage{algorithm}
\usepackage{algorithmic}
\usepackage{amsmath}
%\documentclass[UTF8]{ctexart}
\usepackage{multirow}
\newtheorem{theorem}{定理}
\newtheorem{lemma}{引理}
\newtheorem{definition}{定义}
%\newtheorem{proof}{证明}
%\newtheorem{theorem}{Theorem}
%\newtheorem{lemma}{Lemma}
%\newtheorem{proof}{Proof}[section]

%\documentclass{article}
\renewcommand {\baselinestretch} {1.2}
\renewcommand {\arraystretch} {1.2}
%\pagestyle{empty}
\begin{document}

\title{梯度下降法与FW算法在模糊系统应用中的比较}
\author{\large\bf 王佳文}
%\date{2020年8月10日}
\maketitle

\begin{abstract}
本文描述了梯度下降法，FW算法和Away step FW算法在训练单值一型模糊逻辑系统上的应用。同时分析了梯度下降法和FW算法在此处的收敛速度，两种算法的收敛速度均为$\mathcal{O}(\frac{1}{\sqrt{t}})$,但数值实验的结果显示FW算法所需迭代步更多，所用时间更长。相同训练精度下，梯度下降法所用的时间最少，Away step FW算法能显著减小FW算法的迭代步数。在设置较高的训练精度时，FW算法和Away step FW算法所需的迭代步显著增加，而梯度下降法所需迭代步不会出现大幅变化。
\end{abstract}


\end{document}